name: release

on:
  push:
    branches:
      - 'master'
      - 'develop'

jobs:
  build-push-full:
    name: Build & Push Docker image to Registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Copy env dev
      #   if: github.ref == 'refs/heads/develop'
      #   run: cp .env.development .env

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.AWS_ECR_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build, tag, and push docker image to Amazon ECR
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/Dockerfile
          platforms: ${{ secrets.BUILD_PLATFORMS || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Deploy master
        if: github.ref == 'refs/heads/master'
        run: ssh dev "cd /home/ubuntu/ayb-fe && ./deploy.sh"
